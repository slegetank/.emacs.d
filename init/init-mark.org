* mark
mark跳回，高亮最后两个mark
#+BEGIN_SRC emacs-lisp
  (require-package 'visible-mark)
  (defface visible-mark-active ;; put this before (require 'visible-mark)
    '((((type tty) (class mono)))
      (t (:background "magenta"))) "")
  (require 'visible-mark)
  (setq visible-mark-max 1)
  (setq visible-mark-faces `(visible-mark-face1 visible-mark-face2))
  (setq slegetank/local-mark-ring-timer nil)
  (setq show-paren-priority -1)

  (defun slegetank/temp-show-mark ()
    (when slegetank/local-mark-ring-timer
      (cancel-timer slegetank/local-mark-ring-timer))
    (global-visible-mark-mode +1)
    (setq slegetank/local-mark-ring-timer
          (run-with-idle-timer 2 t (lambda ()
                                     (interactive)
                                     (global-visible-mark-mode 0)))))

  (defun slegetank/pop-local-mark-ring ()
    "Get from `http://ergoemacs.org/emacs/emacs_jump_to_previous_position.html'"
    (interactive)
    (set-mark-command t)
    (slegetank/temp-show-mark))

  (defun slegetank/temp-show-mark-after-push-mark (oldfunc &rest args)
    "Fix evil clip is nil."
    (apply oldfunc args)
    (slegetank/temp-show-mark))

  (advice-add 'push-mark :around 'slegetank/temp-show-mark-after-push-mark)

  (define-key global-map (kbd "s-,") 'slegetank/pop-local-mark-ring)
#+END_SRC

* bookmark
#+BEGIN_SRC emacs-lisp
  (add-to-list 'load-path (expand-file-name "extra-packages/bookmark-plus" user-emacs-directory))
  (require 'bookmark+)

  (setq bookmark-version-control t)
  (setq delete-old-versions t)
#+END_SRC

** customs
跳转时按时间排列：
#+BEGIN_SRC emacs-lisp
  (defadvice bookmark-jump (after bookmark-jump activate)
    (let ((latest (bookmark-get-bookmark bookmark)))
      (setq bookmark-alist (delq latest bookmark-alist))
      (add-to-list 'bookmark-alist latest)))
#+END_SRC
** key
out:
#+BEGIN_SRC emacs-lisp
  (slegetank/leader-define-key
   "bm" nil "Bookmark"
   "bmm" 'bookmark-set "Bookmark set"
   "bml" 'bookmark-bmenu-list "Bookmark list"
   "*" 'counsel-bookmark "Bookmark jump")
#+END_SRC

in:
#+BEGIN_SRC emacs-lisp
  (add-hook 'bookmark-bmenu-mode-hook (lambda ()
                                        (define-key bookmark-bmenu-mode-map (kbd "j") 'next-line)
                                        (define-key bookmark-bmenu-mode-map (kbd "k") 'previous-line)
                                        ;; (define-key bookmark-bmenu-mode-map (kbd "SPC") nil)
                                        ))
#+END_SRC
