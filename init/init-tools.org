有些命令工具不想单独摘出来，就放到这里吧。

* helper commands
#+BEGIN_SRC emacs-lisp
  (defun slegetank/guess-input ()
    "Guess input for youdao dictionary."
    (let* ((thing-at-point (if (use-region-p)
                               (buffer-substring-no-properties (region-beginning) (region-end))
                             (slegetank/thing-at-point))))
      (if (and thing-at-point (> (length thing-at-point) 0))
          thing-at-point
        (if (fboundp 'simpleclip-get-contents)
            (simpleclip-get-contents)
          thing-at-point))))
#+END_SRC
* terminal
改用eshell，废弃
** make-term version
#+BEGIN_SRC emacs-lisp
  ;; make-term version
  (defun slegetank/fast-terminal ()
    "fastway to access terminal. Only open one."
    (interactive)
    (unless (get-buffer-window "*terminal*" 'visible)
      (unless (get-buffer "*terminal*")
        (make-term "terminal" (getenv "SHELL")))
      (with-current-buffer (current-buffer)
        (let ((current-directory default-directory))
          (split-window-sensibly)
          (other-window 1)
          (set-buffer "*terminal*")
          (term-mode)
          (term-char-mode)
          (switch-to-buffer "*terminal*")
          (and current-directory (term-send-raw-string (format "cd %s\n" current-directory)))
          (goto-char (point-max))))))

  (add-hook 'term-mode-hook '(lambda ()
                               (evil-define-key 'normal term-raw-map (kbd "q") '(lambda () (interactive) (other-window -1) (delete-window (get-buffer-window "*terminal*"))))
                               (evil-define-key 'normal term-raw-map (kbd "C-r") 'term-send-reverse-search-history)
                               ))
#+END_SRC
exit之后自动关闭buffer:
#+BEGIN_SRC emacs-lisp
  ;; auto delete window when process exit
  (add-hook 'term-exec-hook (lambda ()
                              (let* ((buff (current-buffer))
                                     (proc (get-buffer-process buff)))
                                (lexical-let ((buff buff))
                                  (set-process-sentinel proc (lambda (process event)
                                                               (if (string= event "finished\n")
                                                                   (kill-buffer-and-window))))))))
#+END_SRC
* ediff
#+BEGIN_SRC emacs-lisp
  (setq ediff-split-window-function 'split-window-horizontally)
  (require-package 'evil-ediff)
  (evil-ediff-init)
#+END_SRC

* 有道词典
#+BEGIN_SRC emacs-lisp
  (require-package  'youdao-dictionary)
  (setq url-automatic-caching t)

  (with-eval-after-load "popwin"
    (push "*Youdao Dictionary*" popwin:special-display-config))

  (if (boundp 'slegetank/cloud-dir)
      (setq youdao-dictionary-search-history-file (expand-file-name ".youdao" slegetank/cloud-dir))
    (setq youdao-dictionary-search-history-file "~/.emacs.d/.youdao"))
#+END_SRC

自定义查询函数：
#+BEGIN_SRC emacs-lisp
  (defun slegetank/youdao-search (word)
    (interactive (list (let* ((guessword (slegetank/guess-input))
                              (readword (read-string (format "Word(%s): " guessword) nil 'youdao-dictionary-history)))
                         (if (> (length readword) 0)
                             readword
                           guessword))))
    (if (> (length word) 0)
        (youdao-dictionary-search word)
      (message "Input empyt. About.")))

  (slegetank/leader-define-key "tt" 'slegetank/youdao-search "Yudao")
#+END_SRC

* keys
#+BEGIN_SRC emacs-lisp
  (slegetank/leader-define-key "t" nil "Tools")
#+END_SRC

